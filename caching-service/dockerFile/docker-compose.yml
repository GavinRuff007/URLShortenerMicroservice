version: '3.8'

services:

  redis:
    image: redis:6.0
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Kafka service
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-container
    environment:
      - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_NAME=PLAINTEXT
      - KAFKA_LISTENER_PORT=9092
      - KAFKA_LISTENER_INTER_BROKER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_INTERNAL=INSIDE://kafka:9093
      - KAFKA_LISTENER_EXTERNAL=PLAINTEXT://localhost:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - app-network

  # Zookeeper service (required for Kafka)
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-container
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  # Spring application service
  caching-service:
    image: your-caching-service-image
    container_name: caching-service-container
    environment:
      - SPRING_APPLICATION_NAME=caching-service
      - SERVER_PORT=8089
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_TIMEOUT=60000
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=test-group
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES=*
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS=DEBUG
      - LOGGING_LEVEL_ORG_APACHE_KAFKA=INFO
    ports:
      - "8089:8089"
    depends_on:
      - redis
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
