version: '3.8'

services:
  mongo:
    image: mongo:5.0
    container_name: mongo-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-container
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-container
    ports:
      - "9092:9092"  # OUTSIDE
      - "9093:9093"  # INSIDE
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    networks:
      - backend

  app:
    build: .
    container_name: my-app
    ports:
      - "8081:8081"
    depends_on:
      - mongo
      - redis
      - kafka
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongo-container:27017/
      SPRING_DATA_MONGODB_DATABASE: mongoURL
      SPRING_DATA_REDIS_HOST: redis-container
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-container:9093
    networks:
      - backend

volumes:
  mongo-data:

networks:
  backend:
    driver: bridge
